package org.parkjw.capylinker.ui.strings

data class AppStrings(
    val language: String,
    val languageDisplayName: String,
    val appName: String,
    val settings: String,
    val addLink: String,
    val apiKeyConfiguration: String,
    val apiKeyDescription: String,
    val apiKeyLabel: String,
    val apiKeyPlaceholder: String,
    val apiKeyHint: String,
    val saveApiKey: String,
    val apiKeySaved: String,
    val languageSettings: String,
    val languageLabel: String,
    val themeSettings: String,
    val themeLabel: String,
    val themeSystem: String,
    val themeLight: String,
    val themeDark: String,
    val back: String,
    val cancel: String,
    val save: String,
    val enterUrl: String,
    val urlPlaceholder: String,
    val analyzing: String,
    val welcomeMessage: String,
    val quotaExceeded: String,
    val retryLater: String,
    val tip: String,
    val quotaTipMessage: String,
    val addLinkDialogDescription: String,
    val urlLabel: String
)

// 지원 언어 목록
val SupportedLanguages = listOf(
    "en" to "English",
    "ko" to "한국어",
    "ja" to "日本語",
    "zh-CN" to "简体中文",
    "zh-TW" to "繁體中文",
    "es" to "Español",
    "fr" to "Français",
    "de" to "Deutsch",
    "ru" to "Русский",
    "pt" to "Português"
)

val EnglishStrings = AppStrings(
    language = "en",
    languageDisplayName = "English",
    appName = "CapyLinker",
    settings = "Settings",
    addLink = "Add Link",
    apiKeyConfiguration = "Gemini API Configuration",
    apiKeyDescription = "Enter your Gemini API key to enable AI-powered link analysis.",
    apiKeyLabel = "Gemini API Key",
    apiKeyPlaceholder = "AIza...",
    apiKeyHint = "Get your API key from Google AI Studio: https://makersuite.google.com/app/apikey",
    saveApiKey = "Save API Key",
    apiKeySaved = "API Key saved successfully!",
    languageSettings = "Language Settings",
    languageLabel = "Language",
    themeSettings = "Theme Settings",
    themeLabel = "Theme",
    themeSystem = "System",
    themeLight = "Light",
    themeDark = "Dark",
    back = "Back",
    cancel = "Cancel",
    save = "Save",
    enterUrl = "Enter the URL to analyze:",
    urlPlaceholder = "https://example.com",
    analyzing = "Analyzing with Gemini AI...",
    welcomeMessage = "Welcome to CapyLinker",
    quotaExceeded = "API Quota Exceeded",
    retryLater = "Please try again later",
    tip = "💡 Tip",
    quotaTipMessage = "The free tier has limited requests per minute. If you hit the limit, the app will automatically retry after a short delay.",
    addLinkDialogDescription = "The link will be analyzed in the background using Gemini AI.",
    urlLabel = "URL"
)

val KoreanStrings = AppStrings(
    language = "ko",
    languageDisplayName = "한국어",
    appName = "CapyLinker",
    settings = "설정",
    addLink = "링크 추가",
    apiKeyConfiguration = "Gemini API 설정",
    apiKeyDescription = "AI 기반 링크 분석을 사용하려면 Gemini API 키를 입력하세요.",
    apiKeyLabel = "Gemini API Key",
    apiKeyPlaceholder = "AIza...",
    apiKeyHint = "Google AI Studio에서 API 키를 발급받으세요: https://makersuite.google.com/app/apikey",
    saveApiKey = "API 키 저장",
    apiKeySaved = "API 키가 저장되었습니다!",
    languageSettings = "언어 설정",
    languageLabel = "언어",
    themeSettings = "테마 설정",
    themeLabel = "테마",
    themeSystem = "시스템",
    themeLight = "라이트",
    themeDark = "다크",
    back = "뒤로",
    cancel = "취소",
    save = "저장",
    enterUrl = "분석할 URL을 입력하세요:",
    urlPlaceholder = "https://example.com",
    analyzing = "Gemini AI로 분석 중...",
    welcomeMessage = "CapyLinker에 오신 것을 환영합니다",
    quotaExceeded = "API 할당량 초과",
    retryLater = "잠시 후 다시 시도해주세요",
    tip = "💡 팁",
    quotaTipMessage = "무료 플랜은 분당 요청 수가 제한되어 있습니다. 제한에 도달하면 앱이 짧은 지연 후 자동으로 재시도합니다.",
    addLinkDialogDescription = "링크는 백그라운드에서 Gemini AI로 분석됩니다.",
    urlLabel = "URL"
)

val JapaneseStrings = AppStrings(
    language = "ja",
    languageDisplayName = "日本語",
    appName = "CapyLinker",
    settings = "設定",
    addLink = "リンクを追加",
    apiKeyConfiguration = "Gemini API 設定",
    apiKeyDescription = "AI駆動のリンク分析を有効にするには、Gemini APIキーを入力してください。",
    apiKeyLabel = "Gemini API Key",
    apiKeyPlaceholder = "AIza...",
    apiKeyHint = "Google AI StudioからAPIキーを取得: https://makersuite.google.com/app/apikey",
    saveApiKey = "APIキーを保存",
    apiKeySaved = "APIキーが保存されました！",
    languageSettings = "言語設定",
    languageLabel = "言語",
    themeSettings = "テーマ設定",
    themeLabel = "テーマ",
    themeSystem = "システム",
    themeLight = "ライト",
    themeDark = "ダーク",
    back = "戻る",
    cancel = "キャンセル",
    save = "保存",
    enterUrl = "分析するURLを入力:",
    urlPlaceholder = "https://example.com",
    analyzing = "Gemini AIで分析中...",
    welcomeMessage = "CapyLinkerへようこそ",
    quotaExceeded = "API割り当て超過",
    retryLater = "しばらくしてからもう一度お試しください",
    tip = "💡 ヒント",
    quotaTipMessage = "無料プランは1分あたりのリクエスト数に制限があります。制限に達すると、アプリは短い遅延後に自動的に再試行します。",
    addLinkDialogDescription = "リンクはバックグラウンドでGemini AIによって分析されます。",
    urlLabel = "URL"
)

val ChineseSimplifiedStrings = AppStrings(
    language = "zh-CN",
    languageDisplayName = "简体中文",
    appName = "CapyLinker",
    settings = "设置",
    addLink = "添加链接",
    apiKeyConfiguration = "Gemini API 配置",
    apiKeyDescription = "输入您的Gemini API密钥以启用AI驱动的链接分析。",
    apiKeyLabel = "Gemini API Key",
    apiKeyPlaceholder = "AIza...",
    apiKeyHint = "从Google AI Studio获取API密钥: https://makersuite.google.com/app/apikey",
    saveApiKey = "保存API密钥",
    apiKeySaved = "API密钥已成功保存！",
    languageSettings = "语言设置",
    languageLabel = "语言",
    themeSettings = "主题设置",
    themeLabel = "主题",
    themeSystem = "系统",
    themeLight = "浅色",
    themeDark = "深色",
    back = "返回",
    cancel = "取消",
    save = "保存",
    enterUrl = "输入要分析的URL:",
    urlPlaceholder = "https://example.com",
    analyzing = "正在使用Gemini AI分析...",
    welcomeMessage = "欢迎使用CapyLinker",
    quotaExceeded = "API配额已超",
    retryLater = "请稍后重试",
    tip = "💡 提示",
    quotaTipMessage = "免费套餐每分钟的请求次数有限。如果达到限制，应用程序将在短暂延迟后自动重试。",
    addLinkDialogDescription = "链接将在后台使用Gemini AI进行分析。",
    urlLabel = "URL"
)

val ChineseTraditionalStrings = AppStrings(
    language = "zh-TW",
    languageDisplayName = "繁體中文",
    appName = "CapyLinker",
    settings = "設定",
    addLink = "新增連結",
    apiKeyConfiguration = "Gemini API 設定",
    apiKeyDescription = "輸入您的Gemini API金鑰以啟用AI驅動的連結分析。",
    apiKeyLabel = "Gemini API Key",
    apiKeyPlaceholder = "AIza...",
    apiKeyHint = "從Google AI Studio取得API金鑰: https://makersuite.google.com/app/apikey",
    saveApiKey = "儲存API金鑰",
    apiKeySaved = "API金鑰已成功儲存！",
    languageSettings = "語言設定",
    languageLabel = "語言",
    themeSettings = "主題設定",
    themeLabel = "主題",
    themeSystem = "系統",
    themeLight = "淺色",
    themeDark = "深色",
    back = "返回",
    cancel = "取消",
    save = "儲存",
    enterUrl = "輸入要分析的URL:",
    urlPlaceholder = "https://example.com",
    analyzing = "正在使用Gemini AI分析...",
    welcomeMessage = "歡迎使用CapyLinker",
    quotaExceeded = "API配額已超",
    retryLater = "請稍後重試",
    tip = "💡 提示",
    quotaTipMessage = "免費方案每分鐘的請求次數有限。如果達到限制，應用程式將在短暫延遲後自動重試。",
    addLinkDialogDescription = "連結將在後台使用Gemini AI進行分析。",
    urlLabel = "URL"
)

val SpanishStrings = AppStrings(
    language = "es",
    languageDisplayName = "Español",
    appName = "CapyLinker",
    settings = "Configuración",
    addLink = "Agregar enlace",
    apiKeyConfiguration = "Configuración de Gemini API",
    apiKeyDescription = "Ingrese su clave API de Gemini para habilitar el análisis de enlaces con IA.",
    apiKeyLabel = "Gemini API Key",
    apiKeyPlaceholder = "AIza...",
    apiKeyHint = "Obtén tu clave API de Google AI Studio: https://makersuite.google.com/app/apikey",
    saveApiKey = "Guardar clave API",
    apiKeySaved = "¡Clave API guardada correctamente!",
    languageSettings = "Configuración de idioma",
    languageLabel = "Idioma",
    themeSettings = "Configuración de tema",
    themeLabel = "Tema",
    themeSystem = "Sistema",
    themeLight = "Claro",
    themeDark = "Oscuro",
    back = "Atrás",
    cancel = "Cancelar",
    save = "Guardar",
    enterUrl = "Ingrese la URL a analizar:",
    urlPlaceholder = "https://example.com",
    analyzing = "Analizando con Gemini AI...",
    welcomeMessage = "Bienvenido a CapyLinker",
    quotaExceeded = "Cuota de API excedida",
    retryLater = "Por favor, inténtelo de nuevo más tarde",
    tip = "💡 Consejo",
    quotaTipMessage = "El nivel gratuito tiene solicitudes limitadas por minuto. Si alcanza el límite, la aplicación reintentará automáticamente después de un breve retraso.",
    addLinkDialogDescription = "El enlace se analizará en segundo plano usando Gemini AI.",
    urlLabel = "URL"
)

val FrenchStrings = AppStrings(
    language = "fr",
    languageDisplayName = "Français",
    appName = "CapyLinker",
    settings = "Paramètres",
    addLink = "Ajouter un lien",
    apiKeyConfiguration = "Configuration de l'API Gemini",
    apiKeyDescription = "Entrez votre clé API Gemini pour activer l'analyse de liens par IA.",
    apiKeyLabel = "Gemini API Key",
    apiKeyPlaceholder = "AIza...",
    apiKeyHint = "Obtenez votre clé API depuis Google AI Studio: https://makersuite.google.com/app/apikey",
    saveApiKey = "Enregistrer la clé API",
    apiKeySaved = "Clé API enregistrée avec succès !",
    languageSettings = "Paramètres de langue",
    languageLabel = "Langue",
    themeSettings = "Paramètres du thème",
    themeLabel = "Thème",
    themeSystem = "Système",
    themeLight = "Clair",
    themeDark = "Sombre",
    back = "Retour",
    cancel = "Annuler",
    save = "Enregistrer",
    enterUrl = "Entrez l'URL à analyser:",
    urlPlaceholder = "https://example.com",
    analyzing = "Analyse avec Gemini AI...",
    welcomeMessage = "Bienvenue sur CapyLinker",
    quotaExceeded = "Quota API dépassé",
    retryLater = "Veuillez réessayer plus tard",
    tip = "💡 Astuce",
    quotaTipMessage = "Le niveau gratuit a des requêtes limitées par minute. Si vous atteignez la limite, l'application réessayera automatiquement après un court délai.",
    addLinkDialogDescription = "Le lien sera analysé en arrière-plan à l'aide de Gemini AI.",
    urlLabel = "URL"
)

val GermanStrings = AppStrings(
    language = "de",
    languageDisplayName = "Deutsch",
    appName = "CapyLinker",
    settings = "Einstellungen",
    addLink = "Link hinzufügen",
    apiKeyConfiguration = "Gemini API Konfiguration",
    apiKeyDescription = "Geben Sie Ihren Gemini API-Schlüssel ein, um die KI-gestützte Link-Analyse zu aktivieren.",
    apiKeyLabel = "Gemini API Key",
    apiKeyPlaceholder = "AIza...",
    apiKeyHint = "Holen Sie sich Ihren API-Schlüssel von Google AI Studio: https://makersuite.google.com/app/apikey",
    saveApiKey = "API-Schlüssel speichern",
    apiKeySaved = "API-Schlüssel erfolgreich gespeichert!",
    languageSettings = "Spracheinstellungen",
    languageLabel = "Sprache",
    themeSettings = "Themeneinstellungen",
    themeLabel = "Thema",
    themeSystem = "System",
    themeLight = "Hell",
    themeDark = "Dunkel",
    back = "Zurück",
    cancel = "Abbrechen",
    save = "Speichern",
    enterUrl = "Geben Sie die zu analysierende URL ein:",
    urlPlaceholder = "https://example.com",
    analyzing = "Analyse mit Gemini AI...",
    welcomeMessage = "Willkommen bei CapyLinker",
    quotaExceeded = "API-Kontingent überschritten",
    retryLater = "Bitte versuchen Sie es später erneut",
    tip = "💡 Tipp",
    quotaTipMessage = "Die kostenlose Stufe hat begrenzte Anfragen pro Minute. Wenn Sie das Limit erreichen, wird die App nach einer kurzen Verzögerung automatisch erneut versuchen.",
    addLinkDialogDescription = "Der Link wird im Hintergrund mit Gemini AI analysiert.",
    urlLabel = "URL"
)

val RussianStrings = AppStrings(
    language = "ru",
    languageDisplayName = "Русский",
    appName = "CapyLinker",
    settings = "Настройки",
    addLink = "Добавить ссылку",
    apiKeyConfiguration = "Конфигурация Gemini API",
    apiKeyDescription = "Введите ключ API Gemini для активации анализа ссылок с помощью ИИ.",
    apiKeyLabel = "Gemini API Key",
    apiKeyPlaceholder = "AIza...",
    apiKeyHint = "Получите ключ API в Google AI Studio: https://makersuite.google.com/app/apikey",
    saveApiKey = "Сохранить ключ API",
    apiKeySaved = "Ключ API успешно сохранён!",
    languageSettings = "Настройки языка",
    languageLabel = "Язык",
    themeSettings = "Настройки темы",
    themeLabel = "Тема",
    themeSystem = "Система",
    themeLight = "Светлая",
    themeDark = "Тёмная",
    back = "Назад",
    cancel = "Отмена",
    save = "Сохранить",
    enterUrl = "Введите URL для анализа:",
    urlPlaceholder = "https://example.com",
    analyzing = "Анализ с помощью Gemini AI...",
    welcomeMessage = "Добро пожаловать в CapyLinker",
    quotaExceeded = "Превышена квота API",
    retryLater = "Пожалуйста, попробуйте позже",
    tip = "💡 Совет",
    quotaTipMessage = "Бесплатный тариф имеет ограниченное количество запросов в минуту. Если вы достигнете лимита, приложение автоматически повторит попытку после короткой задержки.",
    addLinkDialogDescription = "Ссылка будет проанализирована в фоновом режиме с помощью Gemini AI.",
    urlLabel = "URL"
)

val PortugueseStrings = AppStrings(
    language = "pt",
    languageDisplayName = "Português",
    appName = "CapyLinker",
    settings = "Configurações",
    addLink = "Adicionar link",
    apiKeyConfiguration = "Configuração da API Gemini",
    apiKeyDescription = "Digite sua chave API Gemini para ativar a análise de links com IA.",
    apiKeyLabel = "Gemini API Key",
    apiKeyPlaceholder = "AIza...",
    apiKeyHint = "Obtenha sua chave API do Google AI Studio: https://makersuite.google.com/app/apikey",
    saveApiKey = "Salvar chave API",
    apiKeySaved = "Chave API salva com sucesso!",
    languageSettings = "Configurações de idioma",
    languageLabel = "Idioma",
    themeSettings = "Configurações de tema",
    themeLabel = "Tema",
    themeSystem = "Sistema",
    themeLight = "Claro",
    themeDark = "Escuro",
    back = "Voltar",
    cancel = "Cancelar",
    save = "Salvar",
    enterUrl = "Digite a URL para analisar:",
    urlPlaceholder = "https://example.com",
    analyzing = "Analisando com Gemini AI...",
    welcomeMessage = "Bem-vindo ao CapyLinker",
    quotaExceeded = "Cota da API excedida",
    retryLater = "Por favor, tente novamente mais tarde",
    tip = "💡 Dica",
    quotaTipMessage = "O nível gratuito tem solicitações limitadas por minuto. Se você atingir o limite, o aplicativo tentará novamente automaticamente após um breve atraso.",
    addLinkDialogDescription = "O link será analisado em segundo plano usando Gemini AI.",
    urlLabel = "URL"
)

fun getStrings(language: String): AppStrings {
    return when (language) {
        "ko" -> KoreanStrings
        "ja" -> JapaneseStrings
        "zh-CN" -> ChineseSimplifiedStrings
        "zh-TW" -> ChineseTraditionalStrings
        "es" -> SpanishStrings
        "fr" -> FrenchStrings
        "de" -> GermanStrings
        "ru" -> RussianStrings
        "pt" -> PortugueseStrings
        "en" -> EnglishStrings
        else -> EnglishStrings // 기본값을 영어로 설정
    }
}
